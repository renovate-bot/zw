"use strict";(self.webpackChunkzw=self.webpackChunkzw||[]).push([[801],{9613:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return h}});var i=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),h=r,g=u["".concat(s,".").concat(h)]||u[h]||d[h]||a;return t?i.createElement(g,o(o({ref:n},p),{},{components:t})):i.createElement(g,o({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4576:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var i=t(2182),r=t(9028),a=(t(9496),t(9613)),o=["components"],l={id:"editing-workbech",title:"\u2699\ufe0f Editing Workbench",image:"zw/logo/320x320.png",description:"Organized shortcuts for Zsh",keywords:["zsh-edit","workbench","organized"]},s=void 0,c={unversionedId:"ecosystem/plugins/editing-workbech",id:"ecosystem/plugins/editing-workbech",title:"\u2699\ufe0f Editing Workbench",description:"Organized shortcuts for Zsh",source:"@site/docs/ecosystem/plugins/01_zsh_editing_wb.md",sourceDirName:"ecosystem/plugins",slug:"/ecosystem/plugins/editing-workbech",permalink:"/ja/docs/ecosystem/plugins/editing-workbech",editUrl:"https://digitalclouds.crowdin.com/z-shell/ja",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1645956898,formattedLastUpdatedAt:"2022/2/27",sidebarPosition:1,frontMatter:{id:"editing-workbech",title:"\u2699\ufe0f Editing Workbench",image:"zw/logo/320x320.png",description:"Organized shortcuts for Zsh",keywords:["zsh-edit","workbench","organized"]},sidebar:"autoSideBar_1",previous:{title:"\ud83d\udce6 Available packages",permalink:"/ja/docs/ecosystem/packages/packages"},next:{title:"\u2699\ufe0f Command Architect",permalink:"/ja/docs/ecosystem/plugins/zca"}},p={},d=[{value:"Install Zsh Editing Workbench",id:"install-zsh-editing-workbench",level:2},{value:"With ZI",id:"with-zi",level:3},{value:"With Zgen",id:"with-zgen",level:3},{value:"With Antigen",id:"with-antigen",level:3},{value:"Manual Installation",id:"manual-installation",level:3},{value:"Configuring terminals",id:"configuring-terminals",level:2},{value:"<strong>XTerm</strong>",id:"xterm",level:3}],u={toc:d};function h(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/z-shell/zsh-editing-workbench"},"zsh-editing-workbench"))),(0,a.kt)("p",null,"Organized shortcuts for various command line editing operations, plus new operations (e.g. incremental history word\ncompletion)."),(0,a.kt)("p",null,"Incremental history ",(0,a.kt)("em",{parentName:"p"},"word")," completing (started with ",(0,a.kt)("kbd",null,"Alt-h/H")," or ",(0,a.kt)("kbd",null,"Option-h/H")," on Mac):"),(0,a.kt)("h2",{id:"install-zsh-editing-workbench"},"Install Zsh Editing Workbench"),(0,a.kt)("h3",{id:"with-zi"},"With ",(0,a.kt)("a",{parentName:"h3",href:"https://github.com/z-shell/zi"},"ZI")),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"zinit load z-shell/zsh-editing-workbench")," to ",(0,a.kt)("inlineCode",{parentName:"p"},".zshrc"),". The config files will be available in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/zew"),"."),(0,a.kt)("h3",{id:"with-zgen"},"With Zgen"),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"zgen load z-shell/zsh-editing-workbench")," to ",(0,a.kt)("inlineCode",{parentName:"p"},".zshrc")," and issue a ",(0,a.kt)("inlineCode",{parentName:"p"},"zgen reset")," (this assumes that there is a proper\n",(0,a.kt)("inlineCode",{parentName:"p"},"zgen save")," construct in ",(0,a.kt)("inlineCode",{parentName:"p"},".zshrc"),"). The config files will be available in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/zew"),"."),(0,a.kt)("h3",{id:"with-antigen"},"With Antigen"),(0,a.kt)("p",null,"Add ",(0,a.kt)("inlineCode",{parentName:"p"},"antigen bundle z-shell/zsh-editing-workbench")," to ",(0,a.kt)("inlineCode",{parentName:"p"},".zshrc"),". There also should be ",(0,a.kt)("inlineCode",{parentName:"p"},"antigen apply"),". The config files\nwill be in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/znt"),"."),(0,a.kt)("h3",{id:"manual-installation"},"Manual Installation"),(0,a.kt)("p",null,"After extracting ",(0,a.kt)("inlineCode",{parentName:"p"},"ZEW")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"{some-directory}")," add following two lines to ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.zshrc"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'fpath+=( {some-directory} )\nsource "{some-directory}/zsh-editing-workbench.plugin.zsh"\n')),(0,a.kt)("p",null,"As you can see, no plugin manager is needed to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"*.plugin.zsh")," file. The above two lines of code are all that\nalmost ",(0,a.kt)("strong",{parentName:"p"},"all")," plugin managers do. In fact, what's actually needed is only:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'source "{some-directory}/zsh-editing-workbench.plugin.zsh"\n')),(0,a.kt)("p",null,"because ",(0,a.kt)("inlineCode",{parentName:"p"},"ZEW")," detects if it is used by ",(0,a.kt)("strong",{parentName:"p"},"any")," plugin manager and can handle ",(0,a.kt)("inlineCode",{parentName:"p"},"$fpath")," update by itself."),(0,a.kt)("h2",{id:"configuring-terminals"},"Configuring terminals"),(0,a.kt)("h3",{id:"xterm"},(0,a.kt)("strong",{parentName:"h3"},"XTerm")),(0,a.kt)("p",null,"To make ",(0,a.kt)("inlineCode",{parentName:"p"},"Alt")," key work like expected under ",(0,a.kt)("inlineCode",{parentName:"p"},"XTerm")," add ",(0,a.kt)("inlineCode",{parentName:"p"},"XTerm*metaSendsEscape: true")," to your resource file, e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"echo 'XTerm*metaSendsEscape: true' >> ~/.Xresources\n")))}h.isMDXComponent=!0}}]);