"use strict";(self.webpackChunkzw=self.webpackChunkzw||[]).push([[8929],{9613:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),u=i,k=c["".concat(d,".").concat(u)]||c[u]||s[u]||l;return n?a.createElement(k,r(r({ref:t},m),{},{components:n})):a.createElement(k,r({ref:t},m))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3747:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(9496),i="apiTable_e8hp",l=n(1226);var r=(0,a.forwardRef)((function(e,t){var n=e.name,i=e.children,r=function(e){for(var t=e;(0,a.isValidElement)(t);)t=a.Children.toArray(t.props.children)[0];return t}(i),o=n?n+"-"+r:r,d="#"+o,p=(0,l.k6)();return a.createElement("tr",{id:o,tabIndex:0,ref:p.location.hash===d?t:void 0,onClick:function(){p.push(d)},onKeyDown:function(e){"Enter"===e.key&&p.push(d)}},i.props.children)}));function o(e){var t=e.children,n=e.name,l=a.Children.toArray(t.props.children),o=l[0],d=l[1],p=(0,a.useRef)(null);(0,a.useEffect)((function(){var e;null==(e=p.current)||e.focus()}),[p]);var m=a.Children.map(d.props.children,(function(e){return a.createElement(r,{name:n,ref:p},e)}));return a.createElement("table",{className:i},o,a.createElement("tbody",null,m))}},2053:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return c}});var a=n(2182),i=n(9028),l=(n(9496),n(9613)),r=n(3747),o=["components"],d={id:"commands",title:"\ud83d\udee0 Commands",image:"zw/logo/320x320.png",description:"ZI Commands",keywords:["commands"]},p=void 0,m={unversionedId:"guides/commands",id:"guides/commands",title:"\ud83d\udee0 Commands",description:"ZI Commands",source:"@site/docs/guides/04_commands.md",sourceDirName:"guides",slug:"/guides/commands",permalink:"/docs/guides/commands",editUrl:"https://github.com/z-shell/zw/tree/main/docs/guides/04_commands.md",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1645993180,formattedLastUpdatedAt:"2/27/2022",sidebarPosition:4,frontMatter:{id:"commands",title:"\ud83d\udee0 Commands",image:"zw/logo/320x320.png",description:"ZI Commands",keywords:["commands"]},sidebar:"autoSideBar_1",previous:{title:"\ud83d\uddd2 Bindkeys Map",permalink:"/docs/guides/syntax/bindkey"},next:{title:"\ud83c\udfd7 Preferences & Configuration",permalink:"/docs/guides/customization"}},s={},c=[{value:"Commands available with <kbd>^TAB</kbd> completion",id:"commands-available-with-tab-completion",level:2},{value:"Updating ZI and plugins",id:"updating-zi-and-plugins",level:2},{value:"Calling <code>compinit</code> without turbo mode",id:"calling-compinit-without-turbo-mode",level:2},{value:"Calling <code>compinit</code> with turbo mode",id:"calling-compinit-with-turbo-mode",level:2},{value:"Summary of <code>compinit</code> call",id:"summary-of-compinit-call",level:3},{value:"Ignoring compdefs",id:"ignoring-compdefs",level:3},{value:"Loading and unloading",id:"loading-and-unloading",level:2},{value:"Completions management",id:"completions-management",level:2},{value:"Tracking of the active session",id:"tracking-of-the-active-session",level:2},{value:"Reports and statistics",id:"reports-and-statistics",level:2},{value:"Compiling",id:"compiling",level:2},{value:"Other commands",id:"other-commands",level:2},{value:"Help &amp; Manual",id:"help--manual",level:2}],u={toc:c};function k(e){var t=e.components,n=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"commands-available-with-tab-completion"},"Commands available with ",(0,l.kt)("kbd",null,"^TAB")," completion"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="zi ^TAB"',title:'"zi','^TAB"':!0},'self-update          -- "Updates and Compile \u276e ZI \u276f"\nupdate               -- "Git update plugin (or all plugins and snippets if --all passed)"\nzstatus              -- "Checks \u276e ZI \u276f Status"\nreport               -- "Show plugin\'s report (or all plugins\' if --all passed)"\nadd-fpath            -- "Add plugin folder to $fpath"\nbindkeys             -- "Lists bindkeys set up by each plugin"\ncclear               -- "Clear stray and improper completions"\ncd                   -- "Go into plugin\'s directory"\ncdclear              -- "Clear compdef replay list"\ncdisable             -- "Disable completion"\ncdlist               -- "Show compdef replay list"\ncdreplay             -- "Replay compdefs (to be done after compinit)"\ncenable              -- "Enable completion"\nchanges              -- "View plugin\'s git log"\ncompile              -- "Compile plugin (or all plugins if --all passed)"\ncompiled             -- "Show which plugins are compiled"\ncompinit             -- "Refresh installed completions"\ncompletions   clist  -- "List completions in use"\ncreate               -- "Create plugin (also together with Github repository)"\ncreinstall           -- "Install completions for plugin"\ncsearch              -- "Search for available completions from any plugin"\ncuninstall           -- "Uninstall completions for plugin"\ndclear               -- "Clear report of what was going on in session"\ndelete               -- "Delete plugin"\ndreport              -- "Report what was going on in session"\ndstart        dtrace -- "Start tracking what\'s going on in session"\ndstop                -- "Stop tracking what\'s going on in session"\ndunload              -- "Revert changes recorded between dstart and dstop"\nedit                 -- "Edit plugin\'s file with $EDITOR"\nglance               -- "Look at plugin\'s source (pygmentize, {,source-}highlight)"\nload                 -- "Load plugin"\nloaded        list   -- "Show what plugins are loaded"\nls                   -- "List snippets in formatted and colorized manner"\nmodule               -- "Manage binary Zsh module shipped with \u276e ZI \u276f, see `zi module help`"\nrecall               -- "Fetch saved ice modifiers and construct `zi ice \u2026` command"\nrecently             -- "Show plugins that changed recently, argument is e.g. 1 month 2 days"\nrun                  -- "Execute code inside plugin\'s folder"\nsnippet              -- "Source (or add to PATH with --command) local or remote file"\nsrv                  -- "Control a service, command can be: stop,start,restart,next,quit;"\nstatus               -- "Git status for plugin (or all plugins if --all passed)"\nstress               -- "Test plugin for compatibility with set of options"\ntimes                -- "Statistics on plugin loading times"\nuncompile            -- "Remove compiled version of plugin (or of all plugins if --all passed)"\nunload               -- "Unload plugin"\nenv-whitelist        -- "Allows to specify names (also patterns) of variables left unchanged during"\nanalytics            -- "Show \u276e ZI \u276f Analytics"\ncontrol              -- "\u276e ZI \u276f Control commands"\nman                  -- "Manpage"\nhelp                 -- "Usage Information"\n')),(0,l.kt)("h2",{id:"updating-zi-and-plugins"},"Updating ZI and plugins"),(0,l.kt)("p",null,"To update ZI issue ",(0,l.kt)("inlineCode",{parentName:"p"},"zi self-update")," in the command line."),(0,l.kt)("p",null,"To update all plugins and snippets, issue ",(0,l.kt)("inlineCode",{parentName:"p"},"zi update"),"."),(0,l.kt)("p",null,"To update all in parallel (up to 40 at the time) ",(0,l.kt)("inlineCode",{parentName:"p"},"zi update -p 40")),(0,l.kt)("p",null,"If you wish to update only a single plugin/snippet instead issue ",(0,l.kt)("inlineCode",{parentName:"p"},"zi update NAME_OF_PLUGIN"),"."),(0,l.kt)("p",null,"A list of commits will be shown if any."),(0,l.kt)("p",null,"Some plugins require performing an action each time they're updated."),(0,l.kt)("p",null,"One way you can do this is by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"atpull")," ice modifier."),(0,l.kt)("p",null,"For example, writing ",(0,l.kt)("inlineCode",{parentName:"p"},"zi ice atpull'./configure'")," before loading a plugin will execute ",(0,l.kt)("inlineCode",{parentName:"p"},"./configure")," after a successful\nupdate."),(0,l.kt)("p",null,"Refer to ",(0,l.kt)("a",{parentName:"p",href:"/search/?q=ice-modifiers"},"Ice Modifiers")," for more information."),(0,l.kt)("p",null,"The ice modifiers for any plugin or snippet are stored in their directory in a ",(0,l.kt)("inlineCode",{parentName:"p"},"._zi")," subdirectory, hence the plugin\ndoesn't have to be loaded to be correctly updated."),(0,l.kt)("p",null,"There's one other file created there, ",(0,l.kt)("inlineCode",{parentName:"p"},".zi_lstupd")," \u2013 it holds the log of the new commits pulled-in in the last update."),(0,l.kt)("h2",{id:"calling-compinit-without-turbo-mode"},"Calling ",(0,l.kt)("inlineCode",{parentName:"h2"},"compinit")," without turbo mode"),(0,l.kt)("p",null,"With no Turbo mode in use, compinit can be called normally, i.e.: as ",(0,l.kt)("inlineCode",{parentName:"p"},"autoload compinit; compinit"),"."),(0,l.kt)("p",null,"This should be done after loading of all plugins and before possibly calling ",(0,l.kt)("inlineCode",{parentName:"p"},"zi cdreplay"),"."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"cdreplay")," subcommand is provided to re-play all caught ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," calls."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," calls are used to define a completion for a command. For example, ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef _git git")," defines that the\n",(0,l.kt)("inlineCode",{parentName:"p"},"git")," command should be completed by a ",(0,l.kt)("inlineCode",{parentName:"p"},"_git")," function."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," function is provided by ",(0,l.kt)("inlineCode",{parentName:"p"},"compinit")," call."),(0,l.kt)("p",null,"As it should be called later, after loading all of the plugins, ZI provides its own ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," function that catches\n(i.e.: records in an array) the arguments of the call, so that the loaded plugins can freely call ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef"),"."),(0,l.kt)("p",null,"Then, the ",(0,l.kt)("inlineCode",{parentName:"p"},"cdreplay")," (compdef-replay) can be used, after ",(0,l.kt)("inlineCode",{parentName:"p"},"compinit")," will be called (and the original ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," function\nwill become available), to execute all detected ",(0,l.kt)("inlineCode",{parentName:"p"},"compdef")," calls."),(0,l.kt)("p",null,"To summarize:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="~/.zshrc"',title:'"~/.zshrc"'},"source ~/.zi/bin/zi.zsh\n\nzi load \"some/plugin\"\n\n(\u2026)\n\ncompdef _gnu_generic fd  # this will be intercepted by ZI, because as the compinit\n                         # isn't yet loaded, thus there's no such function `compdef'; yet\n                         # ZI provides its own `compdef' function which saves the\n                         # completion-definition for later possible re-run with `zi\n                         # cdreplay' or `zicdreplay' (the second one can be used in hooks\n                         # like atload'\u2026', atinit'\u2026', etc.)\n\n(\u2026)\n\nzi load \"other/plugin\"\n\nautoload -Uz compinit\ncompinit\n\nzi cdreplay -q      # -q is for quiet; actually, run all the `compdef's saved before\n                    #`compinit` call (`compinit' declares the `compdef' function, so\n                    # it cannot be used until `compinit' is run; ZI solves this\n                    # via intercepting the `compdef'-calls and storing them for later\n                    # use with `zi cdreplay')\n")),(0,l.kt)("p",null,"This allows calling compinit once."),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Performance gains are huge, for example, shell startup time with double ",(0,l.kt)("inlineCode",{parentName:"p"},"compinit"),": ",(0,l.kt)("strong",{parentName:"p"},"0.980")," sec, with ",(0,l.kt)("inlineCode",{parentName:"p"},"cdreplay")," and\nsingle ",(0,l.kt)("inlineCode",{parentName:"p"},"compinit"),": ",(0,l.kt)("strong",{parentName:"p"},"0.156")," sec."))),(0,l.kt)("h2",{id:"calling-compinit-with-turbo-mode"},"Calling ",(0,l.kt)("inlineCode",{parentName:"h2"},"compinit")," with turbo mode"),(0,l.kt)("p",null,"If you load completions using ",(0,l.kt)("inlineCode",{parentName:"p"},"wait'\u2026'")," ",(0,l.kt)("a",{parentName:"p",href:"/search?q=turbo+mode"},"turbo mode")," then you can add ",(0,l.kt)("inlineCode",{parentName:"p"},"atinit'zicompinit'")," to the syntax-highlighting\nplugin (which should be the last one loaded, as their (2 projects, ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zsh-users/zsh-syntax-highlighting"},"zsh-syntax-highlighting")," & ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/z-shell/F-Sy-H"},"F-Sy-H"),")\ndocumentation state), or ",(0,l.kt)("inlineCode",{parentName:"p"},"atload'zicompinit'")," to last completion-related plugin."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"zicompinit")," is a function that just runs ",(0,l.kt)("inlineCode",{parentName:"p"},"autoload compinit; compinit"),", created for convenience."),(0,l.kt)("p",null,"There's also ",(0,l.kt)("inlineCode",{parentName:"p"},"zicdreplay")," which will replay any caught compdefs so you can also do: ",(0,l.kt)("inlineCode",{parentName:"p"},"atinit'zicompinit; zicdreplay'"),",\netc."),(0,l.kt)("p",null,"Basically, the whole topic is the same as normal ",(0,l.kt)("inlineCode",{parentName:"p"},"compinit")," call, but it is done in ",(0,l.kt)("inlineCode",{parentName:"p"},"atinit")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"atload")," hook of the\nlast related plugin with the use of the helper functions (",(0,l.kt)("inlineCode",{parentName:"p"},"zicompinit"),",",(0,l.kt)("inlineCode",{parentName:"p"},"zicdreplay")," & ",(0,l.kt)("inlineCode",{parentName:"p"},"zicdclear")," \u2013 see below for\nexplanation of the last one)."),(0,l.kt)("h3",{id:"summary-of-compinit-call"},"Summary of ",(0,l.kt)("inlineCode",{parentName:"h3"},"compinit")," call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{10} title=~/.zshrc","{10}":!0,title:"~/.zshrc"},'source ~/.zi/bin/zi.zsh\n\n# Load using the for-syntax\nzi wait lucid for \\\n    "some/plugin"\n\nzi wait lucid for \\\n    "other/plugin"\n\nzi wait lucid atload"zicompinit; zicdreplay" blockf for \\\n    zsh-users/zsh-completions\n')),(0,l.kt)("h3",{id:"ignoring-compdefs"},"Ignoring compdefs"),(0,l.kt)("p",null,"If you want to ignore compdefs provided by some plugins or snippets, place their load commands before commands loading\nother plugins or snippets, and issue ",(0,l.kt)("inlineCode",{parentName:"p"},"zi cdclear")," (or ",(0,l.kt)("inlineCode",{parentName:"p"},"zicdclear"),", designed to be used in hooks like ",(0,l.kt)("inlineCode",{parentName:"p"},"atload'\u2026'"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'source ~/.zi/bin/zi.zsh\nzi snippet OMZP::git\nzi cdclear -q # <- forget completions provided by Git plugin\n\nzi load "some/plugin"\n\n(\u2026)\n\nzi load "other/plugin"\n\nautoload -Uz compinit\ncompinit\nzi cdreplay -q # <- execute compdefs provided by rest of plugins\nzi cdlist # look at gathered compdefs\n')),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"cdreplay")," is important if you use plugins like ",(0,l.kt)("inlineCode",{parentName:"p"},"OMZP::kubectl")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"asdf-vm/asdf"),", because these plugins call\n",(0,l.kt)("inlineCode",{parentName:"p"},"compdef"),"."),(0,l.kt)("p",null,"Following commands are passed to ",(0,l.kt)("inlineCode",{parentName:"p"},"zi \u2026")," to obtain described effects."),(0,l.kt)("h2",{id:"loading-and-unloading"},"Loading and unloading"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"load")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Load plugin, can also receive absolute local path.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"light")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-b")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Light plugin load, without reporting/investigating. ",(0,l.kt)("inlineCode",{parentName:"td"},"-b")," \u2013 investigate ",(0,l.kt)("inlineCode",{parentName:"td"},"bindkey"),"-calls only. There's also ",(0,l.kt)("inlineCode",{parentName:"td"},"light-mode")," ice which can be used to induce the no-investigating (i.e.: ",(0,l.kt)("em",{parentName:"td"},"light"),") loading, regardless of the command used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"unload")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Unload plugin loaded with ",(0,l.kt)("inlineCode",{parentName:"td"},"zi load \u2026"),". ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," \u2013 quiet.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"snippet")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-f")," ",(0,l.kt)("inlineCode",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},"Source local or remote file (by direct URL). ",(0,l.kt)("inlineCode",{parentName:"td"},"-f")," \u2013 don't use cache (force redownload). The URL can use the following shorthands: ",(0,l.kt)("inlineCode",{parentName:"td"},"PZT::")," (Prezto), ",(0,l.kt)("inlineCode",{parentName:"td"},"PZTM::")," (Prezto module), ",(0,l.kt)("inlineCode",{parentName:"td"},"OMZ::")," (Oh My Zsh), ",(0,l.kt)("inlineCode",{parentName:"td"},"OMZP::")," (OMZ plugin), ",(0,l.kt)("inlineCode",{parentName:"td"},"OMZL::")," (OMZ library), ",(0,l.kt)("inlineCode",{parentName:"td"},"OMZT::")," (OMZ theme), e.g.: ",(0,l.kt)("inlineCode",{parentName:"td"},"PZTM::environment"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"OMZP::git"),", etc."))))),(0,l.kt)("h2",{id:"completions-management"},"Completions management"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"clist")," ",(0,l.kt)("inlineCode",{parentName:"td"},"columns")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"completions")," ",(0,l.kt)("inlineCode",{parentName:"td"},"columns")),(0,l.kt)("td",{parentName:"tr",align:null},"List completions in use, with ",(0,l.kt)("inlineCode",{parentName:"td"},"columns")," completions per line. ",(0,l.kt)("inlineCode",{parentName:"td"},"zi clist 5")," will for example print 5 completions per line. Default is 3.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cdisable")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Disable completion.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cenable")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Enable completion.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"creinstall")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-Q")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Install completions for plugin, can also receive absolute local path. ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," \u2013 quiet. ",(0,l.kt)("inlineCode",{parentName:"td"},"-Q")," - quiet all.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cuninstall '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Uninstall completions for plugin.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"csearch")),(0,l.kt)("td",{parentName:"tr",align:null},"Search for available completions from any plugin.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"compinit")),(0,l.kt)("td",{parentName:"tr",align:null},"Refresh installed completions.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cclear")),(0,l.kt)("td",{parentName:"tr",align:null},"Clear stray and improper completions.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cdlist")),(0,l.kt)("td",{parentName:"tr",align:null},"Show compdef replay list.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cdreplay")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")),(0,l.kt)("td",{parentName:"tr",align:null},"Replay compdefs (to be done after compinit). ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," \u2013 quiet.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cdclear")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")),(0,l.kt)("td",{parentName:"tr",align:null},"Clear compdef replay list. ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," \u2013 quiet."))))),(0,l.kt)("h2",{id:"tracking-of-the-active-session"},"Tracking of the active session"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"dtrace, dstart")),(0,l.kt)("td",{parentName:"tr",align:null},"Start investigating what's going on in session.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"dstop")),(0,l.kt)("td",{parentName:"tr",align:null},"Stop investigating what's going on in session.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"dunload")),(0,l.kt)("td",{parentName:"tr",align:null},"Revert changes recorded between dstart and dstop.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"dreport")),(0,l.kt)("td",{parentName:"tr",align:null},"Report what was going on in session.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"dclear")),(0,l.kt)("td",{parentName:"tr",align:null},"Clear report of what was going on in session."))))),(0,l.kt)("h2",{id:"reports-and-statistics"},"Reports and statistics"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"times")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-s")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-m")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-a")),(0,l.kt)("td",{parentName:"tr",align:null},"Statistics on plugin load times, sorted in order of loading. ",(0,l.kt)("inlineCode",{parentName:"td"},"-s")," \u2013 use seconds instead of milliseconds. ",(0,l.kt)("inlineCode",{parentName:"td"},"-m")," \u2013 show plugin loading moments and ",(0,l.kt)("inlineCode",{parentName:"td"},"-a")," both.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"zstatus")),(0,l.kt)("td",{parentName:"tr",align:null},"Overall ZI status.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"report")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Show plugin report. ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 do it for all plugins.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"loaded")),(0,l.kt)("td",{parentName:"tr",align:null},"Show loaded plugins")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"list")," ",(0,l.kt)("inlineCode",{parentName:"td"},"keyword")),(0,l.kt)("td",{parentName:"tr",align:null},"Filter loaded plugins with only 'keyword'")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"ls")),(0,l.kt)("td",{parentName:"tr",align:null},"List snippets in formatted and colorized manner. Requires ",(0,l.kt)("strong",{parentName:"td"},"tree")," program.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"status")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"URL")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Git status for plugin or svn status for snippet. ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 do it for all plugins and snippets.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"recently")," ",(0,l.kt)("inlineCode",{parentName:"td"},"time-spec")),(0,l.kt)("td",{parentName:"tr",align:null},"Show plugins that changed recently, argument is e.g. 1 month 2 days.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"bindkeys")),(0,l.kt)("td",{parentName:"tr",align:null},"Lists bindkeys set up by each plugin."))))),(0,l.kt)("h2",{id:"compiling"},"Compiling"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"compile")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Compile plugin. ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 compile all plugins.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"uncompile")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Remove compiled version of plugin. ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 do it for all plugins.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"compiled")),(0,l.kt)("td",{parentName:"tr",align:null},"List plugins that are compiled."))))),(0,l.kt)("h2",{id:"other-commands"},"Other commands"),(0,l.kt)(r.Z,{mdxType:"APITable"},(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"self-update")),(0,l.kt)("td",{parentName:"tr",align:null},"Updates and compiles ZI.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"update")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-r")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Update all plugins and snippets with ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 for quiet ",(0,l.kt)("inlineCode",{parentName:"td"},"-q")," \u2013 execute ",(0,l.kt)("inlineCode",{parentName:"td"},"git reset --hard")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"svn revert")," before pulling changes with ",(0,l.kt)("inlineCode",{parentName:"td"},"-r"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"ice '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},'Add ice to next command, argument e.g.: from"gitlab".')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"delete")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"--clean")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")),(0,l.kt)("td",{parentName:"tr",align:null},"Remove plugin or snippet from disk (good to forget wrongly passed ice-modifiers) ",(0,l.kt)("inlineCode",{parentName:"td"},"--all")," \u2013 delete plugins and snippets that are not loaded with ",(0,l.kt)("inlineCode",{parentName:"td"},"--clean"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"cd '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Jump into plugin's directory. Also support snippets if fed with URL.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"edit '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Edit plugin's file with set \\$EDITOR.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"glance '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Look at plugin's source (pygmentize, {,source-}highlight).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"stress '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Test plugin for compatibility with set of options.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"changes '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"View plugin's git log.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"create '\u2026'")),(0,l.kt)("td",{parentName:"tr",align:null},"Create plugin (also together with GitHub repository).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"srv")," ",(0,l.kt)("inlineCode",{parentName:"td"},"service-id")," ",(0,l.kt)("inlineCode",{parentName:"td"},"{command}")),(0,l.kt)("td",{parentName:"tr",align:null},"Control a service, command can be: stop,start,restart,next,quit; ",(0,l.kt)("inlineCode",{parentName:"td"},"next")," moves the service to another Zshell.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"recall '\u2026'")," ",(0,l.kt)("inlineCode",{parentName:"td"},"URL")),(0,l.kt)("td",{parentName:"tr",align:null},"Fetch saved ice modifiers and construct ",(0,l.kt)("inlineCode",{parentName:"td"},"zi ice '\u2026'")," command.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"env-whitelist")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-v")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-h")," ",(0,l.kt)("inlineCode",{parentName:"td"},"{env..}")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows to specify names or patterns of variables left unchanged during an unload \u2013 verbose ",(0,l.kt)("inlineCode",{parentName:"td"},"-v")," \u2013 help ",(0,l.kt)("inlineCode",{parentName:"td"},"-h"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"module")),(0,l.kt)("td",{parentName:"tr",align:null},"Manage binary Zsh module shipped with ZI, see ",(0,l.kt)("inlineCode",{parentName:"td"},"zi module help"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"add-fpath")," ",(0,l.kt)("inlineCode",{parentName:"td"},"fpath")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-f")," ",(0,l.kt)("inlineCode",{parentName:"td"},"--front")," ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," ",(0,l.kt)("inlineCode",{parentName:"td"},"sub-directory")),(0,l.kt)("td",{parentName:"tr",align:null},"Adds given plugin (not yet snippet) directory to ",(0,l.kt)("inlineCode",{parentName:"td"},"$fpath"),". If the second argument is given, it is appended to the directory path. If the option ",(0,l.kt)("inlineCode",{parentName:"td"},"-f")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"--front")," is given, the directory path is prepended instead of appended to ",(0,l.kt)("inlineCode",{parentName:"td"},"$fpath"),". The ",(0,l.kt)("inlineCode",{parentName:"td"},"'\u2026'")," can be absolute path, i.e.: it's possible to also add regular directories.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"run")," ",(0,l.kt)("inlineCode",{parentName:"td"},"-l")," ",(0,l.kt)("inlineCode",{parentName:"td"},"plugin")," ",(0,l.kt)("inlineCode",{parentName:"td"},"{command}")),(0,l.kt)("td",{parentName:"tr",align:null},"Runs the given command in the given plugin's directory. If the option ",(0,l.kt)("inlineCode",{parentName:"td"},"-l")," will be given then the plugin should be skipped \u2013 the option will cause the previous plugin to be reused."))))),(0,l.kt)("h2",{id:"help--manual"},"Help & Manual"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"-h, help")),(0,l.kt)("td",{parentName:"tr",align:null},"Usage information.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("inlineCode",{parentName:"td"},"man")),(0,l.kt)("td",{parentName:"tr",align:null},"Manual.")))))}k.isMDXComponent=!0}}]);